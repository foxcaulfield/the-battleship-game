{"version":3,"sources":["components/Interface/Board/FieldSquare/FieldSquare.module.css","components/Interface/ControlButtons/StartButton/StartButton.module.css","components/Header/InfoButton/InfoButton.module.css","components/Header/ThemeButton/ThemeButton.module.css","components/Interface/Interface.module.css","components/Header/Header.module.css","utils/Wave/wave.module.css","utils/Popup/Popup.module.css","components/Introduction/Introduction.module.css","components/Interface/Stats/Stats.module.css","components/Interface/Board/Board.module.css","components/Header/InfoButton/InfoButton.js","utils/Popup/Popup.js","components/Introduction/Tutorial/Tutorial.js","components/Header/ThemeButton/ThemeButton.js","components/Header/Header.js","components/Introduction/Introduction.js","utils/randomInteger.js","store/reducers/boardReducer.js","components/Interface/ControlButtons/StartButton/StartButton.js","components/Interface/ControlButtons/ControlButtons.js","components/Interface/Stats/Stats.js","components/Interface/Board/FieldSquare/FieldSquare.js","components/Interface/Board/Board.js","components/Interface/Interface.js","store/reducers/controlButtonsReducer.js","store/reduxStore.js","utils/Wave/Wave.js","components/Themes/GlobalStyles.js","components/Themes/Themes.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","InfoButton","props","className","styles","metal","linear","infoButton","onClick","handleClose","Popup","content","metalButton","Tutorial","id","ThemeButton","themeButton","changeTheme","Header","useState","isOpen","setIsOpen","togglePopup","mainHeader","headerText","toggleTheme","Introduction","introductionParagraph","getRandomIntInclusive","min","max","Math","ceil","floor","random","SET_SHIP_POSITION_ACTION_TYPE_BOARD_REDUCER","GET_GUESS_ACTION_TYPE_BOARD_REDUCER","TOGGLE_WIN_GAME_OVER_FLOW_ACTION_TYPE_BOARD_REDUCER","boardInitialState","fieldLength","attemptsLeft","shipPosition","lastGuess","guessesArray","isWin","isGameOver","boardReducer","state","action","type","connect","dispatch","setShipPosition","guess","classNames","startButton","ControlButtons","stats","role","aria-label","FieldSquare","fieldSquare","dim","isGameInProgress","shouldBlink","disabled","buttonId","e","getGuess","target","innerHTML","buttonValue","getGuessActionCreator","fieldArray","i","len","push","useEffect","fieldBoard","undefined","map","value","some","elem","index","Interface","controlPanel","controlPanelUnitButtons","controlPanelUnitStats","ACTION","controlButtonsInitialState","field","controlButtonsReducer","reducers","combineReducers","store","createStore","window","Wave","waves","xmlns","xmlnsXlink","viewBox","preserveAspectRatio","shape-rendering","d","parallax","xlinkHref","x","y","fill","GlobalStyles","createGlobalStyle","theme","body","text","darkTheme","themeBlue","themeGreen","themeOrange","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ea1c65d1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"fieldSquare\":\"FieldSquare_fieldSquare__21-Xg\",\"metal\":\"FieldSquare_metal__1IuO0\",\"linear\":\"FieldSquare_linear__26JS5\",\"dim\":\"FieldSquare_dim__1ZkSC\",\"isGameInProgress\":\"FieldSquare_isGameInProgress__3Ca4o\",\"blur\":\"FieldSquare_blur__Pi4MW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"startButton\":\"StartButton_startButton__1Pat2\",\"metal\":\"StartButton_metal__sLS_G\",\"linear\":\"StartButton_linear__1v-du\",\"isGameOver\":\"StartButton_isGameOver__3s-0t\",\"blur\":\"StartButton_blur__3iZA8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoButton\":\"InfoButton_infoButton__3hHU-\",\"metal\":\"InfoButton_metal__3z_94\",\"linear\":\"InfoButton_linear__3bCQJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"themeButton\":\"ThemeButton_themeButton__1jDU7\",\"metal\":\"ThemeButton_metal__1zxPT\",\"linear\":\"ThemeButton_linear__3YoJo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controlPanel\":\"Interface_controlPanel__3HyyK\",\"controlPanelUnitButtons\":\"Interface_controlPanelUnitButtons__YiFiw\",\"controlPanelUnitStats\":\"Interface_controlPanelUnitStats__uuAND\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainHeader\":\"Header_mainHeader___qAal\",\"headerText\":\"Header_headerText__JtF5O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"waves\":\"wave_waves__2SV_4\",\"parallax\":\"wave_parallax__1JeOX\",\"move-forever\":\"wave_move-forever__inPgP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"metalButton\":\"Popup_metalButton__3s6Y8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"introductionParagraph\":\"Introduction_introductionParagraph__31Pa_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stats\":\"Stats_stats__9gM6k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fieldBoard\":\"Board_fieldBoard__3evFr\"};","import styles from \"./InfoButton.module.css\";\r\n\r\nfunction InfoButton(props) {\r\n  return (\r\n    <button\r\n      className={`${styles.metal} ${styles.linear} ${styles.infoButton} `}\r\n      onClick={props.handleClose}\r\n    >\r\n      Rules\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default InfoButton;\r\n","import styles from \"./Popup.module.css\";\r\nimport React from \"react\";\r\n\r\nconst Popup = (props) => {\r\n  return (\r\n    <div className=\"popup-box\">\r\n      <div className=\"box\">\r\n        {props.content}\r\n        <button className={styles.metalButton} onClick={props.handleClose}>\r\n          ok\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Popup;\r\n","function Tutorial() {\r\n  return (\r\n    <section id=\"tutorial\">\r\n      <h1>tutorial</h1>\r\n      <p id=\"tut1\">\r\n        There is the simple nine-square grid instead of an original Battleship\r\n        grid ;)\r\n      </p>\r\n      <p id=\"tut2\">Enemy ship has one block, so make accurate shots.</p>\r\n      <p id=\"tut3\">You have only 5 attempts. Good luck!</p>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Tutorial;\r\n","import styles from \"./ThemeButton.module.css\";\r\n\r\nfunction ThemeButton(props) {\r\n  return (\r\n    <button\r\n      className={`${styles.metal} ${styles.linear} ${styles.themeButton} `}\r\n      onClick={props.changeTheme}\r\n    >\r\n      THEME\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default ThemeButton;\r\n","import styles from \"./Header.module.css\";\r\nimport InfoButton from \"./InfoButton/InfoButton\";\r\nimport Popup from \"../../utils/Popup/Popup\";\r\nimport React, { useState } from \"react\";\r\nimport Tutorial from \"../Introduction/Tutorial/Tutorial\";\r\nimport ThemeButton from \"./ThemeButton/ThemeButton\";\r\n\r\nfunction Header(props) {\r\n  //pop-up interface\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const togglePopup = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n  //pop-up interface\r\n  return (\r\n    <>\r\n      <div>\r\n        {isOpen && <Popup content={<Tutorial />} handleClose={togglePopup} />}\r\n      </div>\r\n      <div className={styles.mainHeader}>\r\n        <InfoButton handleClose={togglePopup} />\r\n        <span className={styles.headerText}>The Battleship Game v.0.7.1</span>\r\n        <ThemeButton changeTheme={props.toggleTheme} />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import styles from \"./Introduction.module.css\";\r\n\r\nfunction Introduction() {\r\n  return (\r\n    <p className={styles.introductionParagraph}>\r\n      Hello! This is a Battleship! Objective of the game is to destroy the enemy\r\n      ship\r\n    </p>\r\n  );\r\n}\r\n\r\nexport default Introduction;\r\n","export function getRandomIntInclusive(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.ceil(max);\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n","import { getRandomIntInclusive } from \"../../utils/randomInteger\";\r\nconst SET_SHIP_POSITION_ACTION_TYPE_BOARD_REDUCER =\r\n  \"SET_SHIP_POSITION_ACTION_TYPE_BOARD_REDUCER\";\r\nconst GET_GUESS_ACTION_TYPE_BOARD_REDUCER =\r\n  \"GET_GUESS_ACTION_TYPE_BOARD_REDUCER\";\r\nconst TOGGLE_WIN_GAME_OVER_FLOW_ACTION_TYPE_BOARD_REDUCER =\r\n  \"TOGGLE_WIN_GAME_OVER_FLOW_ACTION_TYPE_BOARD_REDUCER\";\r\n\r\nconst boardInitialState = {\r\n  fieldLength: 9,\r\n  attemptsLeft: 5,\r\n\r\n  shipPosition: null,\r\n  lastGuess: null,\r\n\r\n  guessesArray: [],\r\n\r\n  isWin: false,\r\n  isGameOver: false,\r\n};\r\n\r\nfunction boardReducer(state = boardInitialState, action) {\r\n  switch (action.type) {\r\n    case SET_SHIP_POSITION_ACTION_TYPE_BOARD_REDUCER:\r\n      return {\r\n        ...boardInitialState,\r\n        shipPosition: getRandomIntInclusive(1, state.fieldLength),\r\n      };\r\n    case GET_GUESS_ACTION_TYPE_BOARD_REDUCER:\r\n      return {\r\n        ...state,\r\n        lastGuess: +action.lastGuess,\r\n        attemptsLeft: state.attemptsLeft - 1,\r\n        guessesArray: [...state.guessesArray, +action.lastGuess],\r\n      };\r\n    case TOGGLE_WIN_GAME_OVER_FLOW_ACTION_TYPE_BOARD_REDUCER:\r\n      return {\r\n        ...state,\r\n        isWin: state.lastGuess === state.shipPosition,\r\n        isGameOver:\r\n          state.attemptsLeft < 1 || state.lastGuess === state.shipPosition,\r\n      };\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n\r\nexport function toggleWinGameOverFlow() {\r\n  return {\r\n    type: TOGGLE_WIN_GAME_OVER_FLOW_ACTION_TYPE_BOARD_REDUCER,\r\n  };\r\n}\r\n\r\nexport function setShipPositionActionCreator() {\r\n  return {\r\n    type: SET_SHIP_POSITION_ACTION_TYPE_BOARD_REDUCER,\r\n  };\r\n}\r\n\r\nexport function getGuessActionCreator(guess) {\r\n  return {\r\n    type: GET_GUESS_ACTION_TYPE_BOARD_REDUCER,\r\n    lastGuess: guess,\r\n  };\r\n}\r\n\r\nexport default boardReducer;\r\n","import { setShipPositionActionCreator } from \"../../../../store/reducers/boardReducer\";\r\nimport { connect } from \"react-redux\";\r\nimport styles from \"./StartButton.module.css\";\r\nimport classNames from \"classnames\";\r\n\r\nfunction StartButton(props) {\r\n  return (\r\n    <button\r\n      id=\"startButton\"\r\n      onClick={props.setShipPosition}\r\n      className={classNames(styles.metal, styles.linear, styles.startButton, {\r\n        [styles.isGameOver]:\r\n          props.boardReducer.isGameOver || !props.boardReducer.shipPosition,\r\n      })}\r\n    >\r\n      Start\r\n    </button>\r\n  );\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    boardReducer: state.boardReducer,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setShipPosition: (guess) => {\r\n      dispatch(setShipPositionActionCreator(guess));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(StartButton);\r\n","import StartButton from \"./StartButton/StartButton\";\r\nfunction ControlButtons() {\r\n  return (\r\n    <section id=\"buttonSection\">\r\n      <StartButton />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default ControlButtons;\r\n","import { connect } from \"react-redux\";\r\nimport styles from \"./Stats.module.css\";\r\n\r\nfunction Stats(props) {\r\n  return (\r\n    <section className={styles.stats}>\r\n      <span className=\"emoji\" role=\"img\" aria-label=\"heart\">\r\n        ❤️\r\n      </span>\r\n      {props.boardReducer.attemptsLeft}\r\n    </section>\r\n  );\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    boardReducer: state.boardReducer,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(Stats);\r\n","import styles from \"./FieldSquare.module.css\";\r\nimport classNames from \"classnames\";\r\n\r\nfunction FieldSquare(props) {\r\n  return (\r\n    <button\r\n      className={classNames(\r\n        styles.metal,\r\n        styles.linear,\r\n        styles.fieldSquare,\r\n        {\r\n          [styles.dim]: props.dim,\r\n        },\r\n        { [styles.isGameInProgress]: props.shouldBlink }\r\n      )}\r\n      disabled={props.disabled}\r\n      id={props.buttonId}\r\n      onClick={(e) => props.getGuess(e.target.innerHTML)}\r\n    >\r\n      {props.buttonValue}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default FieldSquare;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport FieldSquare from \"./FieldSquare/FieldSquare\";\r\nimport {\r\n  getGuessActionCreator,\r\n  toggleWinGameOverFlow,\r\n} from \"../../../store/reducers/boardReducer\";\r\nimport styles from \"./Board.module.css\";\r\nimport Popup from \"../../../utils/Popup/Popup\";\r\n\r\nfunction Board(props) {\r\n  let fieldArray = [],\r\n    i = 0,\r\n    len = props.boardReducer.fieldLength;\r\n  while (++i <= len) fieldArray.push(i);\r\n\r\n  //pop-up interface\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const togglePopup = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.boardReducer.isGameOver) {\r\n      setIsOpen(true);\r\n    }\r\n  }, [props.boardReducer.isGameOver]);\r\n  //pop-up interface\r\n\r\n  return (\r\n    <section id=\"field\" className={styles.fieldBoard}>\r\n      {isOpen ? (\r\n        <Popup\r\n          content={\r\n            props.boardReducer.isWin ? (\r\n              <h1>\r\n                CONGRATULATIONS! YOU WON!{\" \"}\r\n                <span className=\"emoji\" role=\"img\" aria-label=\"cool\">\r\n                  😎\r\n                </span>\r\n              </h1>\r\n            ) : (\r\n              <h1>\r\n                OOPS... FAILED{\" \"}\r\n                <span className=\"emoji\" role=\"img\" aria-label=\"Slightly Sad\">\r\n                  🙁\r\n                </span>\r\n              </h1>\r\n            )\r\n          }\r\n          handleClose={togglePopup}\r\n        />\r\n      ) : undefined}\r\n\r\n      {fieldArray.map(function (i) {\r\n        let value = i;\r\n        if (props.boardReducer.guessesArray.some((elem) => elem === i)) {\r\n          value = (\r\n            <span role=\"img\" aria-label=\"Cross Mark\">\r\n              ❌\r\n            </span>\r\n          );\r\n        }\r\n        if (\r\n          i === props.boardReducer.shipPosition &&\r\n          i === props.boardReducer.lastGuess\r\n        ) {\r\n          value = (\r\n            <span role=\"img\" aria-label=\"ship\">\r\n              🚢\r\n            </span>\r\n          );\r\n        }\r\n        return (\r\n          <FieldSquare\r\n            disabled={\r\n              props.boardReducer.isWin ||\r\n              props.boardReducer.isGameOver ||\r\n              !props.boardReducer.shipPosition ||\r\n              props.boardReducer.guessesArray.some((elem) => elem === i)\r\n            }\r\n            key={i}\r\n            index={i}\r\n            buttonId={`buttonId${i}`}\r\n            buttonValue={value}\r\n            getGuess={props.getGuess}\r\n            dim={\r\n              !props.boardReducer.shipPosition ||\r\n              (props.boardReducer.isGameOver &&\r\n                !props.boardReducer.guessesArray.some((elem) => elem === i))\r\n            }\r\n            shouldBlink={\r\n              !props.boardReducer.isGameOver &&\r\n              props.boardReducer.shipPosition &&\r\n              !props.boardReducer.guessesArray.some((elem) => elem === i)\r\n            }\r\n          />\r\n        );\r\n      })}\r\n    </section>\r\n  );\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    boardReducer: state.boardReducer,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getGuess: (guess) => {\r\n      dispatch(getGuessActionCreator(guess));\r\n      dispatch(toggleWinGameOverFlow());\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Board);\r\n","import ControlButtons from \"./ControlButtons/ControlButtons\";\r\nimport Stats from \"./Stats/Stats\";\r\nimport Board from \"./Board/Board\";\r\nimport styles from \"./Interface.module.css\";\r\n\r\nfunction Interface() {\r\n  return (\r\n    <div>\r\n      <div className={styles.controlPanel}>\r\n        <div className={styles.controlPanelUnitButtons}>\r\n          <ControlButtons />\r\n        </div>\r\n        <div className={styles.controlPanelUnitStats}>\r\n          <Stats />\r\n        </div>\r\n      </div>\r\n      <Board />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Interface;\r\n","const ACTION = \"ACTION\";\r\n\r\nconst controlButtonsInitialState = {\r\n  field: [],\r\n};\r\n\r\nfunction controlButtonsReducer(state = controlButtonsInitialState, action) {\r\n  switch (action.type) {\r\n    case ACTION:\r\n      return {\r\n        ...state,\r\n      };\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n\r\nexport const initializedSuccessActionCreator = () => ({\r\n  type: ACTION,\r\n});\r\n\r\nexport default controlButtonsReducer;\r\n","import { createStore, combineReducers } from \"redux\";\r\nimport boardReducer from \"./reducers/boardReducer\";\r\nimport controlButtonsReducer from \"./reducers/controlButtonsReducer\";\r\n\r\nlet reducers = combineReducers({\r\n  boardReducer,\r\n  controlButtonsReducer,\r\n});\r\n\r\nconst store = createStore(reducers);\r\n\r\nwindow.store = store;\r\n\r\nexport default store;\r\n","import styles from \"./wave.module.css\";\r\n\r\nfunction Wave() {\r\n  return (\r\n    <div>\r\n      <svg\r\n        className={styles.waves}\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n        viewBox=\"0 24 150 28\"\r\n        preserveAspectRatio=\"none\"\r\n        shape-rendering=\"auto\"\r\n      >\r\n        <defs>\r\n          <path\r\n            id=\"gentle-wave\"\r\n            d=\"M-160 44c30 0 58-18 88-18s 58 18 88 18 58-18 88-18 58 18 88 18 v44h-352z\"\r\n          />\r\n        </defs>\r\n        <g className={styles.parallax}>\r\n          <use\r\n            xlinkHref=\"#gentle-wave\"\r\n            x=\"48\"\r\n            y=\"0\"\r\n            fill=\"rgba(255,255,255,0.7\"\r\n          />\r\n          <use\r\n            xlinkHref=\"#gentle-wave\"\r\n            x=\"48\"\r\n            y=\"3\"\r\n            fill=\"rgba(255,255,255,0.5)\"\r\n          />\r\n          <use\r\n            xlinkHref=\"#gentle-wave\"\r\n            x=\"48\"\r\n            y=\"5\"\r\n            fill=\"rgba(255,255,255,0.3)\"\r\n          />\r\n          <use xlinkHref=\"#gentle-wave\" x=\"48\" y=\"7\" fill=\"#fff\" />\r\n        </g>\r\n      </svg>\r\n    </div>\r\n  );\r\n}\r\nexport default Wave;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n  body {\r\n    background: ${({ theme }) => theme.body};\r\n    color: ${({ theme }) => theme.text};\r\n   \r\n  }\r\n  `;\r\n","export const lightTheme = {\r\n  body: \"#FFF\",\r\n  text: \"#363537\",\r\n  toggleBorder: \"#FFF\",\r\n  background: \"#363537\",\r\n};\r\n\r\nexport const darkTheme = {\r\n  body: \"#969399\",\r\n};\r\n\r\nexport const themeBlue = {\r\n  body:\r\n    \"linear-gradient(60deg,    rgba(84, 58, 183, 1) 0%,    rgba(0, 172, 193, 1) 100%)\",\r\n};\r\n\r\nexport const themeGreen = {\r\n  body:\r\n    \"linear-gradient(    60deg,    rgb(58, 183, 129) 0%,    rgb(0, 230, 57) 100%  )\",\r\n};\r\n\r\nexport const themeOrange = {\r\n  body:\r\n    \"linear-gradient(    60deg,    rgb(183, 139, 58) 0%,    rgb(193, 45, 0) 100%  )\",\r\n};\r\n","import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport Header from \"./components/Header/Header\";\r\nimport Introduction from \"./components/Introduction/Introduction\";\r\nimport Interface from \"./components/Interface/Interface\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store/reduxStore\";\r\nimport Wave from \"./utils/Wave/Wave\";\r\nimport classNames from \"classnames\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { GlobalStyles } from \"./components/Themes/GlobalStyles\";\r\nimport {\r\n  darkTheme,\r\n  themeOrange,\r\n  themeBlue,\r\n  themeGreen,\r\n} from \"./components/Themes/Themes\";\r\n\r\nfunction App() {\r\n  const [theme, changeTheme] = useState(darkTheme);\r\n\r\n  function themeToggler() {\r\n    theme === themeOrange\r\n      ? changeTheme(themeGreen)\r\n      : theme === themeGreen\r\n      ? changeTheme(themeBlue)\r\n      : theme === themeBlue\r\n      ? changeTheme(darkTheme)\r\n      : changeTheme(themeOrange);\r\n  }\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <GlobalStyles />\r\n      <div className={classNames(\"App\")}>\r\n        <Provider store={store}>\r\n          <Header toggleTheme={themeToggler} />\r\n          <Introduction />\r\n          <Interface />\r\n          <div className=\"footerWaves\">\r\n            <Wave />\r\n          </div>\r\n        </Provider>\r\n      </div>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}